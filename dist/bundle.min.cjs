"use strict";var e=require("jsdoc/env"),n=require("path");function s(e,s){this.conf.submodule??={};const{pwd:o,conf:{submodule:{roots:t,ignore:a},source:c}}=this,m=Object.entries(t||{}).sort(((e,n)=>n[1].split("/").length-e[1].split("/").length));for(const e of c.include)m.push(["",e]);let i=n.relative(o,e.meta.path);for(const e of m){const[n,s]=e;if(i.includes(s)){i=""!=n?i.replace(s,n):i.replace(new RegExp(`${s}/?`),n);break}}const l=e.meta.filename.match(/^.+(?=\..+$)/)[0],r=s?.value?.name||(""===i?l:(a||["index"]).includes(l)||this.leaf?i:`${i}/${l}`);this.leaf?process.env.SUBMODULE=r:Object.assign(e,{kind:"module",name:r})}const o={fileBegin:()=>{process.env.SUBMODULE=""},fileComplete:()=>{process.env.SUBMODULE=""},jsdocCommentFound:e=>{if(!e.comment.match(/@memberof/)&&!e.comment.match(/\/\*\*.*\*\//)&&""!=process.env.SUBMODULE){const n=` * @memberof module:${process.env.SUBMODULE}`;e.comment=e.comment.replace(/\s*\*\/$/,`\n${n}\n */`)}}};exports.defineTags=n=>{const o={canHaveType:!0,canHaveName:!0,isNamespace:!1,mustHaveValue:!1,mustNotHaveDescription:!0,mustNotHaveValue:!1};n.defineTag("submodule",{...o,onTagged:s.bind(e)}),n.defineTag("leafmodule",{...o,onTagged:s.bind({...e,leaf:!0})})},exports.handlers=o;
